name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

defaults:
  run:
    working-directory: backend

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Run the tests
        run: pipenv run test

  Build:
    needs: Test
    runs-on: ubuntu-latest
    environment: deployment
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::278239571658:role/github-to-aws-oidc

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        id: build_image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPO_BACKEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "REGISTRY=${REGISTRY}"
          echo "REPOSITORY=${REPOSITORY}"
          echo "IMAGE_TAG=${IMAGE_TAG}"
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Set image_uri output
        id: set_image_uri
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPO_BACKEND }}:${{ github.sha }}"
          echo "image_uri=${IMAGE_URI}" >> $GITHUB_OUTPUT

      - name: Print Build Image URI
        run: echo "Build image_uri=${{ steps.set_image_uri.outputs.image_uri }}"

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    environment: deployment
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::278239571658:role/github-to-aws-oidc

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Debug Build Outputs
        run: |
          echo "Build image_uri=${IMAGE_URI}"

      - name: Show Final Kubernetes Manifests
        run: |
          cd k8s
          kustomize edit set image backend=$IMAGE_URI
          kustomize build > final-manifests.yaml
          cat final-manifests.yaml

      - name: Deploy Kubernetes manifests
        env:
          IMAGE_URI: $IMAGE_URI
          CLUSTER: ${{ secrets.AWS_CLUSTER }}
          REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd k8s
          aws eks update-kubeconfig --name $CLUSTER --region $REGION
          kustomize edit set image backend=$IMAGE_URI
          kustomize build | kubectl apply -f -
